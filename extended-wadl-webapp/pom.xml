<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  ~
  ~ Copyright (c) 2012-2013 Oracle and/or its affiliates. All rights reserved.
  ~
  ~ The contents of this file are subject to the terms of either the GNU
  ~ General Public License Version 2 only ("GPL") or the Common Development
  ~ and Distribution License("CDDL") (collectively, the "License").  You
  ~ may not use this file except in compliance with the License.  You can
  ~ obtain a copy of the License at
  ~ http://glassfish.java.net/public/CDDL+GPL_1_1.html
  ~ or packager/legal/LICENSE.txt.  See the License for the specific
  ~ language governing permissions and limitations under the License.
  ~
  ~ When distributing the software, include this License Header Notice in each
  ~ file and include the License file at packager/legal/LICENSE.txt.
  ~
  ~ GPL Classpath Exception:
  ~ Oracle designates this particular file as subject to the "Classpath"
  ~ exception as provided by Oracle in the GPL Version 2 section of the License
  ~ file that accompanied this code.
  ~
  ~ Modifications:
  ~ If applicable, add the following below the License Header, with the fields
  ~ enclosed by brackets [] replaced by your own identifying information:
  ~ "Portions Copyright [year] [name of copyright owner]"
  ~
  ~ Contributor(s):
  ~ If you wish your version of this file to be governed by only the CDDL or
  ~ only the GPL Version 2, indicate your decision by adding "[Contributor]
  ~ elects to include this software in this distribution under the [CDDL or GPL
  ~ Version 2] license."  If you don't indicate a single choice of license, a
  ~ recipient has the option to distribute your version of this file under
  ~ either the CDDL, the GPL Version 2 or to extend the choice of license to
  ~ its licensees as provided above.  However, if you add GPL Version 2 code
  ~ and therefore, elected the GPL Version 2 license, then the option applies
  ~ only if the new code is made subject to such option by the copyright
  ~ holder.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>project</artifactId>
        <groupId>org.glassfish.jersey.examples</groupId>
        <version>2.0-m13-2</version>
    </parent>

    <artifactId>extended-wadl-webapp</artifactId>
    <name>jersey-examples-extended-wadl-webapp</name>
    <packaging>war</packaging>

    <description>Extended wadl example</description>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-bundle</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-servlet</artifactId>
        </dependency>

        <!-- Extended Wadl Config: Dependency to jersey-wadl-doclet is needed here to keep the correct build order. -->
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-wadl-doclet</artifactId>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
        </dependency>

        <!-- TODO: this dependency should not be here. Temporary fix for NoClassDefFound (also in other samples). -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.servlet</artifactId>
            <version>3.0</version>
            <scope>runtime</scope>
        </dependency>
        <!-- END TODO-->

        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-default</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit-extender-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.swissbox</groupId>
            <artifactId>pax-swissbox-tinybundles</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${artifactId}</finalName>
        <!-- Extended Wadl Config: These resources are used for generating additional content of wadl -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.glassfish.jersey.examples.extendedwadl.App</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Extended Wadl Config: this plugin generates the jaxb beans from xsd schemas -->
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>0.8.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generatePackage>org.glassfish.jersey.examples.extendedwadl</generatePackage>
                    <schemaDirectory>src/main/xsd</schemaDirectory>
                    <!--<includeSchemas>-->
                    <!--<includeSchema>**/*.xsd</includeSchema>-->
                    <!--</includeSchemas>-->
                    <extension>true</extension>
                    <strict>false</strict>
                    <verbose>true</verbose>
                </configuration>
            </plugin>

            <!-- Extended Wadl Config: javadoc plugin generates resourcedoc.xml during the compilation using doclet.
            Generated file is then used during runtime to attach javadoc information to wadl. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <verbose>false</verbose>
                    <show>public</show>
                    <subpackages>org.glassfish.jersey.examples.extendedwadl</subpackages>
                    <doclet>org.glassfish.jersey.wadl.doclet.ResourceDoclet</doclet>
                    <docletPath>${path.separator}${project.build.outputDirectory}</docletPath>
                    <docletArtifacts>
                        <!-- jersey doclet generator -->
                        <docletArtifact>
                            <groupId>org.glassfish.jersey.ext</groupId>
                            <artifactId>jersey-wadl-doclet</artifactId>
                            <version>${project.version}</version>
                        </docletArtifact>
                        <!--
                            Also specify jersey and xerces as doclet artifacts as the ResourceDoclet
                            uses classes provided by them to generate the resourcedoc.
                         -->
                        <docletArtifact>
                            <groupId>org.glassfish.jersey.core</groupId>
                            <artifactId>jersey-server</artifactId>
                            <version>${project.version}</version>
                        </docletArtifact>
                        <docletArtifact>
                            <groupId>xerces</groupId>
                            <artifactId>xercesImpl</artifactId>
                            <version>2.6.1</version>
                        </docletArtifact>
                    </docletArtifacts>
                    <!-- the following option is required as a work around for
                         version 2.5 of the javadoc plugin which will be used
                         by a maven version > 2.0.9 -->
                    <useStandardDocletOptions>false</useStandardDocletOptions>
                    <additionalparam>-output ${project.build.outputDirectory}/resourcedoc.xml</additionalparam>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkMode>always</forkMode>
                    <enableAssertions>false</enableAssertions>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.ops4j.pax.exam</groupId>
                <artifactId>maven-paxexam-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xslt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-example-gf-pom</id>
                        <phase>package</phase> <!-- append to the packaging phase. -->
                        <goals>
                            <goal>transform</goal> <!-- goals == mojos -->
                        </goals>
                        <configuration>
                          <xslFile>src/main/xslt/gf.xsl</xslFile>
                          <srcDir>.</srcDir>
                          <srcIncludes>pom.xml</srcIncludes>
                          <destDir>target/gf-pom-file</destDir>
                       </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
         </plugins>
    </build>
</project>
